name: Build and Test

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ${{ matrix.os }}

    strategy:
      # Set fail-fast to false to ensure that feedback is delivered for all matrix combinations. Consider changing this to true when your workflow is stable.
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        build_type: [Release]
        c_compiler: [gcc, clang, cl]
        include:
          - os: windows-latest
            c_compiler: cl
            cpp_compiler: cl
          - os: ubuntu-latest
            c_compiler: gcc
            cpp_compiler: g++
          - os: macos-latest
            c_compiler: clang
            cpp_compiler: clang++
        exclude:
          - os: windows-latest
            c_compiler: gcc
          - os: windows-latest
            c_compiler: clang
          - os: ubuntu-latest
            c_compiler: cl
          - os: ubuntu-latest
            c_compiler: clang
          - os: macos-latest
            c_compiler: cl
          - os: macos-latest
            c_compiler: gcc

    steps:
    - uses: actions/checkout@v4

    - name: Set reusable strings
      id: strings
      shell: bash
      run: |
        echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

    - name: Install dependencies
      if: runner.os == 'Linux'
      run: |
        sudo apt-get update
        sudo apt-get install -y libudev-dev libusb-1.0-0-dev

    - name: Configure CMake
      run: >
        cmake -B ${{ steps.strings.outputs.build-output-dir }}
        -DCMAKE_CXX_COMPILER=${{ matrix.cpp_compiler }}
        -DCMAKE_C_COMPILER=${{ matrix.c_compiler }}
        -DCMAKE_BUILD_TYPE=${{ matrix.build_type }}
        -S ${{ github.workspace }}

    - name: Build
      run: cmake --build ${{ steps.strings.outputs.build-output-dir }} --config ${{ matrix.build_type }}

    - name: Test
      working-directory: ${{ steps.strings.outputs.build-output-dir }}
      run: ctest --build-config ${{ matrix.build_type }}

    - name: Upload
      uses: actions/upload-artifact@v4
      with:
        name: output-${{ matrix.os }}
        path: ${{ steps.strings.outputs.build-output-dir }}

  package:
    runs-on: ubuntu-latest

    needs: build

    steps:
      - uses: actions/checkout@v4

      - name: Set reusable strings
        id: strings
        shell: bash
        run: |
          echo "build-output-dir=${{ github.workspace }}/build" >> "$GITHUB_OUTPUT"

      - name: Gather Linux Package
        uses: actions/download-artifact@v4
        with:
          name: output-ubuntu-latest
          path: ${{ steps.strings.outputs.build-output-dir }}

      - name: Gather Windows Package
        uses: actions/download-artifact@v4
        with:
          name: output-windows-latest
          path: ${{ steps.strings.outputs.build-output-dir }}
      
      - name: Gather MacOS Package
        uses: actions/download-artifact@v4
        with:
          name: output-macos-latest
          path: ${{ steps.strings.outputs.build-output-dir }}
 
      - name: Pack Plugins 
        working-directory: ${{ steps.strings.outputs.build-output-dir }}
        run: |
          unzip output-ubuntu-latest.zip -d ubuntu
          unzip output-macos-latest.zip -d macos
          unzip output-windows-latest.zip -d windows
          install -D ubuntu/hcbravo.xpl Resources/plugins/lin_x64/hcbravo.xpl
          install -D macos/hcbravo.xpl Resources/plugins/mac_x64/hcbravo.xpl
          install -D windows/hcbravo.xpl Resources/plugins/win_x64/hcbravo.xpl

      - name: Pack Resources
        run: |
          find "ext/joystick configs" -type f -exec install -D {} "${{ steps.strings.outputs.build-output-dir }}/Resources/joystick configs/"{} \;
          find conf -type f -exec install -D {} ${{ steps.strings.outputs.build-output-dir }}/Resources/plugins/conf/{} \;

      - name: Upload
        uses: actions/upload-artifact@v4
        with:
          name: hcbravo
          path: ${{ steps.strings.outputs.build-output-dir }}/Resources

